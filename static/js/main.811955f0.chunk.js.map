{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","tittle","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","newText","toUpperCase","alert","toLowerCase","split","length","Alert","alertMsg","role","word","lower","charAt","slice","captilize","msg","App","setMode","setAlert","showAlert","message","setTimeout","aboutUs","document","body","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.811955f0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.tittle} </Link> */}\r\n        <a className=\"navbar-brand\" href=\"\">{props.tittle} </a>\r\n\r\n         \r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutUs}</a>\r\n            </li> */}\r\n            \r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">Service </a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n// Set props types\r\nNavbar.propTypes = {\r\n  tittle: PropTypes.string,\r\n  aboutUs: PropTypes.string,\r\n  mode: PropTypes.string\r\n};\r\n\r\n// // set default props types\r\n// Navbar.defaultProps = {\r\n//   tittle: \"DefaultName\",\r\n//   aboutUs: \"DefaultAbout\",\r\n// };\r\n\r\n// // Required place\r\n// Navbar.propTypes = {\r\n//   tittle: PropTypes.string.isRequired,\r\n//   aboutUs: PropTypes.string.isRequired,\r\n// };\r\n\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n        // text = \"New text place here\";  ----> not allowed, you can't change text value directly. \r\n        // setText(\"New value of text\");  ----> This is right way to update text value.\r\n\r\n    const ConvertToUpperCase = () =>{\r\n        // console.log(\"Clicked Convert to LowerCase \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.alert(\"Your text has been converted into uppercase\", \"success \");\r\n    }\r\n    const ConvertToLowerCase = () =>{\r\n        // console.log(\"Clicked Convert to LowerCase \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.alert(\"Your text has been converted into lowercase\", \"success \");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div style={{color: props.mode==='dark'?'white':'black'}}>\r\n          <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" onChange={handleOnChange} style={{color: props.mode==='light'?'#042743':'white',\r\n                 backgroundColor: props.mode==='light'?'white':'grey'}}\r\n                value={text} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n\r\n            <div className=\"container \">\r\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={ConvertToUpperCase}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={ConvertToLowerCase}>Convert to LowerCase</button>\r\n            </div>\r\n\r\n            <div className=\"container my-2\">\r\n                <h1>Your text Summary</h1>\r\n                <h4>Words : {text.split(' ').length}</h4>\r\n                <h4>Characters : {text.length}</h4>\r\n                <h4>Time to read : {0.008 * text.split(' ').length} mins</h4>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n\r\n            {/* <div className=\"mb-3 justify-content-around\">\r\n                <button className=\"btn btn-primary my-3\">Convert to UperCase</button> \r\n            </div>  */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const captilize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alertMsg && <div className={`alert alert-${props.alertMsg.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captilize(props.alertMsg.type)}</strong>{props.alertMsg.msg} \r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message , type) =>{\n        setAlert({\n          msg : message,\n          type : type\n        })\n\n        setTimeout(()=>{\n            setAlert(null);\n        }, 2000)\n  }\n\n  const toggleMode = () =>{\n      if(mode === 'light'){\n         setMode('dark');\n         document.body.style.backgroundColor = '#042743';\n         showAlert(\"The dark mode has been enabled \", \"success \");\n         document.title = \"Editor - darkMode\";\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"The light mode has been enabled \", \"success \");\n        document.title = \"Editor - lightMode\";\n      }\n\n  }\n\n  return (\n    \n   <>\n    {/* <Router> */}\n      <Navbar tittle=\"TextMaker\" aboutUs=\"AboutUs\" mode={mode} toggleMode={toggleMode}/>  \n      <Alert  alertMsg={alert}/>\n\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route  exact path=\"/\"> */}\n            <div className=\"container\">\n              <TextForm heading=\"Enter the text to Analyze below\" alert={showAlert} mode={mode}/>   \n            </div> \n          {/* </Route> */}\n      {/* </Switch> */}\n\n    {/* </Router> */}\n\n   </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}